
<!doctype html>
<html>
	<head>
		<meta http-equiv="Content-type" content="text/html;charset=UTF-8" /> 
		<title>Jcrop &raquo; Tutorials &raquo; API Demo</title>
		<script src="../js/jquery.min.js"></script>
		<script src="../js/jquery.Jcrop.js"></script>
		<link rel="stylesheet" href="../css/jquery.Jcrop.css" type="text/css" />
		<link rel="stylesheet" href="demo_files/demos.css" type="text/css" />
		<style type="text/css">
			.optdual { position: relative; }
			.optdual .offset { position: absolute; left: 18em; }
			.optlist label { width: 16em; display: block; }
			#dl_links { margin-top: .5em; }
		</style>
		<script type="text/javascript">

			$(function($){

				var jcrop_api; // Holder for the API
				initJcrop();
				
				function initJcrop()//{{{
				{
					$('.requiresjcrop').hide();

					$('#cropbox').Jcrop({},function(){

						$('.requiresjcrop').show();

						jcrop_api = this;
						jcrop_api.animateTo([100,100,400,300]);

						$('#can_click,#can_move,#can_size').attr('checked','checked');
						$('#ar_lock,#size_lock,#bg_swap').attr('checked',false);

					});

				};
				//}}}

				// Use the API to find cropping dimensions
				// Then generate a random selection
				// This function is used by setSelect and animateTo buttons
				// Mainly for demonstration purposes
				function getRandom() {
					var dim = jcrop_api.getBounds();
					return [
						Math.round(Math.random() * dim[0]),
						Math.round(Math.random() * dim[1]),
						Math.round(Math.random() * dim[0]),
						Math.round(Math.random() * dim[1])
					];
				};

				// Attach interface buttons
				// This may appear to be a lot of code but it's simple stuff
				$('#setSelect').click(function(e) {
					// Sets a random selection
					jcrop_api.setSelect(getRandom());
				});
				$('#animateTo').click(function(e) {
					// Animates to a random selection
					jcrop_api.animateTo(getRandom());
				});
				$('#release').click(function(e) {
					// Release method clears the selection
					jcrop_api.release();
				});
				$('#disable').click(function(e) {
					jcrop_api.disable();

					$('#enable').show();
					$('.requiresjcrop').hide();
				});
				$('#enable').click(function(e) {
					jcrop_api.enable();

					$('#enable').hide();
					$('.requiresjcrop').show();
				});
				$('#rehook').click(function(e) {
					$('#rehook,#enable').hide();
					initJcrop();
					$('#unhook,.requiresjcrop').show();
					return false;
				});
				$('#unhook').click(function(e) {
					jcrop_api.destroy();

					$('#unhook,#enable,.requiresjcrop').hide();
					$('#rehook').show();
					return false;
				});

				// Hook up the three image-swapping buttons
				$('#img1').click(function(e) {
					jcrop_api.setImage('demo_files/sago.jpg');
					jcrop_api.setOptions({ bgOpacity: .6 });
					return false;
				});
				$('#img2').click(function(e) {
					jcrop_api.setImage('/Jcrop/demos/demo_files/pool.jpg');
					jcrop_api.setOptions({ bgOpacity: .6 });
					return false;
				});
				$('#img3').click(function(e) {
					jcrop_api.setImage('demo_files/sago.jpg',function(){
						this.setOptions({
							bgOpacity: 1,
							outerImage: 'demo_files/sagomod.jpg'
						});
						this.animateTo(getRandom());
					});
					return false;
				});

				// The checkboxes simply set options based on it's checked value
				// Options are changed by passing a new options object

				// Also, to prevent strange behavior, they are initially checked
				// This matches the default initial state of Jcrop

				$('#can_click').change(function(e) {
					jcrop_api.setOptions({ allowSelect: !!this.checked });
					jcrop_api.focus();
				});
				$('#can_move').change(function(e) {
					jcrop_api.setOptions({ allowMove: !!this.checked });
					jcrop_api.focus();
				});
				$('#can_size').change(function(e) {
					jcrop_api.setOptions({ allowResize: !!this.checked });
					jcrop_api.focus();
				});
				$('#ar_lock').change(function(e) {
					jcrop_api.setOptions(this.checked? { aspectRatio: 4/3 }: { aspectRatio: 0 });
					jcrop_api.focus();
				});
				$('#size_lock').change(function(e) {
					jcrop_api.setOptions(this.checked? {
						minSize: [ 80, 80 ],
						maxSize: [ 350, 350 ]
					}: {
						minSize: [ 0, 0 ],
						maxSize: [ 0, 0 ]
					});
					jcrop_api.focus();
				});

			});

		</script>

	</head>

	<body>
		<div id="outer">
		<div class="jcExample">
		<div class="article">

			<h1>Jcrop - API Demo</h1>
			<img src="demo_files/sago.jpg" id="cropbox" />

			<div style="margin: .8em 0 .5em;">
				<span class="requiresjcrop">
					<button id="setSelect">setSelect</button>
					<button id="animateTo">animateTo</button>
					<button id="release">Release</button>
					<button id="disable">Disable</button>
				</span>
				<button id="enable" style="display:none;">Re-Enable</button>
				<button id="unhook">Destroy!</button>
				<button id="rehook" style="display:none;">Attach Jcrop</button>
			</div>

			<fieldset class="optdual requiresjcrop">
				<legend>Option Toggles</legend>
				<div class="optlist offset">
					<label><input type="checkbox" id="ar_lock" />Aspect ratio</label>
					<label><input type="checkbox" id="size_lock" />minSize/maxSize setting</label>
				</div>
				<div class="optlist">
					<label><input type="checkbox" id="can_click" />Allow new selections</label>
					<label><input type="checkbox" id="can_move" />Selection can be moved</label>
					<label><input type="checkbox" id="can_size" />Resizable selection</label>
				</div>
			</fieldset>

			<fieldset class="requiresjcrop" style="margin: .5em 0;">
				<legend>Change Image</legend>
				<span>
					<button id="img2">Flowers</button>
					<button id="img1">Sago</button>
					<button id="img3">Sago w/ outerImage</button>
				</span>
			</fieldset>

		<div id="dl_links">
			<a href="http://deepliquid.com/content/Jcrop.html">Jcrop Home</a> |
			<a href="http://deepliquid.com/content/Jcrop_Manual.html">Manual (Docs)</a>
		</div>

		</div>
		</div>
		</div>
	</body>
</html>


